name: Run Terraform Workflow of specific folder

on:
  workflow_call:
    inputs:
      check_mode:
        description: 'Run the terraform in check (plan) mode'
        required: true
        type: boolean
        default: false
      folder:
        description: 'The folder to run the terraform in'
        required: true
        type: string
        default: ""
    secrets:
      GPG_PASSPHRASE:
        required: true
  workflow_dispatch:
    inputs:
      check_mode:
        description: 'Run the terraform in check (plan) mode'
        required: true
        type: boolean
        default: false
      folder:
        description: 'The folder to run the terraform in'
        required: true
        type: string
        default: ""


jobs:
  terraform-workflow:
    runs-on: ubuntu-24.04
    # Add permissions for PR comments and OIDC token
    permissions:
      contents: read
      pull-requests: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::319844025384:role/CIAdministratorAccessRole
          role-session-name: GitHubActions-${{ github.run_id }}
          aws-region: 'ap-northeast-1' 

      - name: Check arguments
        run: |
          if [ -z "${{ inputs.folder }}" ]; then
            echo "folder is required. please provide a folder name."
            exit 1
          fi

      - name: Get Terraform Version
        id: get_terraform_version
        run: |
          cd "${{ inputs.folder }}"
          echo "terraform_version=$(cat .terraform-version)" >> $GITHUB_ENV

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.terraform_version }}
      
      - name: Verify Terraform Version
        run: |
          terraform version
          echo "Terraform version: ${{ env.terraform_version }}"
      
      - name: Set job-wide environment variables
        run: |
          if [ "${{ inputs.folder }}" == "cloudflare" ]; then
            echo "TF_VAR_cloudflare_api_token=${{ secrets.CLOUDFLARE_API_TOKEN }}" >> $GITHUB_ENV
          fi
      
      - name: Init Check Validate Terraform
        run: |
          cd "${{ inputs.folder }}"
          echo "Running terraform init..."
          terraform init -input=false -upgrade

          echo "Running terraform format..."
          terraform fmt -check -recursive

          echo "Running terraform validate..."
          terraform validate

          echo "Terraform init, format, and validate completed successfully."

      - name: Planning Terraform
        run: |
          cd "${{ inputs.folder }}"
          FOLDER_WITHOUT_SLASH=$(echo "${{ inputs.folder }}" | sed 's:/*$::')
          echo "TMP_PLAN_LOCATION=/tmp/$FOLDER_WITHOUT_SLASH-${{ github.run_id }}.tfplan" >> $GITHUB_ENV
          terraform plan -out=${{ env.TMP_PLAN_LOCATION }}
          echo "Terraform plan completed successfully. Plan is saved to /tmp/${{ inputs.folder }}-${{ github.run_id }}.tfplan"
