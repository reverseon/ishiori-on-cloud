name: Run Terraform Workflow of specific folder

on:
  workflow_call:
    inputs:
      check_mode:
        description: 'Run the terraform in check (plan) mode'
        required: true
        type: boolean
        default: false
      folder:
        description: 'The folder to run the terraform in'
        required: true
        type: string
        default: ""
    secrets:
      CLOUDFLARE_API_TOKEN:
        description: 'Cloudflare API token'
        required: false
  workflow_dispatch:
    inputs:
      check_mode:
        description: 'Run the terraform in check (plan) mode'
        required: true
        type: boolean
        default: false
      folder:
        description: 'The folder to run the terraform in'
        required: true
        type: string
        default: ""


jobs:
  terraform-workflow:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      pull-requests: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::319844025384:role/CIAdministratorAccessRole
          role-session-name: GitHubActions-${{ github.run_id }}
          aws-region: 'ap-northeast-1' 

      - name: Check arguments
        run: |
          if [ -z "${{ inputs.folder }}" ]; then
            echo "folder is required. please provide a folder name."
            exit 1
          fi

      - name: Get Terraform Version
        id: get_terraform_version
        run: |
          cd "${{ inputs.folder }}"
          echo "terraform_version=$(cat .terraform-version)" >> $GITHUB_ENV

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.terraform_version }}
      
      - name: Verify Terraform Version
        run: |
          terraform version
          echo "Terraform version: ${{ env.terraform_version }}"
      
      - name: Set job-wide environment variables
        run: |
          FOLDER_FILENAME_FRIENDLY=$(echo "${{ inputs.folder }}" | sed 's/[^a-zA-Z0-9._-]/_/g')
          echo "FOLDER_FILENAME_FRIENDLY=${FOLDER_FILENAME_FRIENDLY}" >> $GITHUB_ENV
          echo "TMP_PLAN_LOCATION=/tmp/$FOLDER_FILENAME_FRIENDLY-${{ github.run_id }}.tfplan" >> $GITHUB_ENV
          if [ "${{ inputs.folder }}" == "cloudflare" ]; then
            echo "TF_VAR_cloudflare_api_token=${{ secrets.CLOUDFLARE_API_TOKEN }}" >> $GITHUB_ENV
          fi
      
      - name: Terraform Format
        id: fmt
        run: |
          cd "${{ inputs.folder }}"
          terraform fmt -check -recursive -diff
      
      - name: Terraform Init
        id: init
        run: |
          cd "${{ inputs.folder }}"
          terraform init -lock=false -input=false

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Planning Terraform
        run: |
          cd "${{ inputs.folder }}"
          terraform plan -lock=false -input=false -out=${{ env.TMP_PLAN_LOCATION }}

      - name: Find associated pull request
        if: github.ref != 'refs/heads/main'
        id: pr
        uses: juliangruber/find-pull-request-action@v1
        with:
          branch: ${{ github.head_ref || github.ref_name }}

      - name: Comment Terraform Plan on PR
        if: github.event_name == 'pull_request' || steps.pr.outputs.number
        run: |
          cd "${{ inputs.folder }}"
          
          PLAN_OUTPUT=$(terraform show -no-color ${{ env.TMP_PLAN_LOCATION }} 2>/dev/null | grep -v "::debug::" | grep -v "^\[command\]")
          
          PR_NUMBER=${{ steps.pr.outputs.number || github.event.number }}
          
          COMMENT_IDENTIFIER="<!-- terraform-plan-${{ env.FOLDER_FILENAME_FRIENDLY }}-pr-${PR_NUMBER} -->"
          
          COMMENT_BODY="${COMMENT_IDENTIFIER}
          ## üìù Terraform Plan for \`${{ inputs.folder }}\` (PR #${PR_NUMBER})

          <details>
          <summary>Show Plan</summary>

          \`\`\`terraform
          ${PLAN_OUTPUT}
          \`\`\`

          </details>

          *Workflow run: [\`${{ github.run_id }}\`](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})*"
          
          EXISTING_COMMENT_ID=$(curl -s \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ github.token }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "${{ github.api_url }}/repos/${{ github.repository }}/issues/${PR_NUMBER}/comments" \
            | jq -r ".[] | select(.body | contains(\"terraform-plan-${{ env.FOLDER_FILENAME_FRIENDLY }}-pr-${PR_NUMBER}\")) | .id" \
            | head -1)
          
          if [ -n "$EXISTING_COMMENT_ID" ] && [ "$EXISTING_COMMENT_ID" != "null" ]; then
            echo "Updating existing comment ID: $EXISTING_COMMENT_ID"
            curl -X PATCH \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: Bearer ${{ github.token }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "${{ github.api_url }}/repos/${{ github.repository }}/issues/comments/${EXISTING_COMMENT_ID}" \
              -d "{\"body\":$(echo "$COMMENT_BODY" | jq -R -s .)}"
          else
            echo "Creating new comment"
            curl -X POST \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: Bearer ${{ github.token }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "${{ github.api_url }}/repos/${{ github.repository }}/issues/${PR_NUMBER}/comments" \
              -d "{\"body\":$(echo "$COMMENT_BODY" | jq -R -s .)}"
          fi
      - name: Apply Terraform
        run: |
          cd "${{ inputs.folder }}"
          if [ "${{ inputs.check_mode }}" = "false" ] && [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "Running in apply mode"
            terraform apply -auto-approve -input=false ${{ env.TMP_PLAN_LOCATION }}
          else
            echo "Running in check mode. skipping terraform apply."
          fi